from mychat import get_completion
import json

# # 商品评论

lamp_review_zh = """
我需要一盏漂亮的卧室灯，这款灯具有额外的储物功能，价格也不算太高。
我很快就收到了它。在运输过程中，我们的灯绳断了，但是公司很乐意寄送了一个新的。
几天后就收到了。这款灯很容易组装。我发现少了一个零件，于是联系了他们的客服，他们很快就给我寄来了缺失的零件！
在我看来，Lumina 是一家非常关心顾客和产品的优秀公司！
"""

# ## 情感（正向/负向）

prompt = f"""
你能够从<review>中得到一份产品评论，你的任务是判断评论的情感是正向的还是负向的。

产品评论：
<review>
{lamp_review_zh}
</review>

"""

prompt = f"""
你能够从<review>中得到一份产品评论，你的任务是判断评论的情感是正向的还是负向的。
要求：
    只回答“正向”或“负向”，不要回答其他内容。

产品评论：
<review>
{lamp_review_zh}
</review>

"""

# ## 识别情感类型

prompt = f"""
你能够从<review>中得到一份产品评论，你的任务是识别评论作者表达的情感。
要求：
    包含不超过5个情感类型，情感类型之间用逗号分割。

产品评论：
<review>
{lamp_review_zh}
</review>

"""

# ## 识别愤怒

prompt = f"""
你能够从<review>中得到一份产品评论，你的任务是识别评论作者表达了愤怒。
要求：
    只回答“是”或者“否”，不回答其它内容。

产品评论：
<review>
{lamp_review_zh}
</review>

"""

# ## 从客户评论中提取产品和公司名称

prompt = f"""
你能够从<review>中得到一份产品评论，你的任务是从评论中提取以下项目：
- 评论者购买的产品
- 制造该产品的公司

要求：
    输出为JSON对象，JSON中包含“product”和“company”字段。如果某项信息无法提取，则返回“null”。

产品评论：
<review>
{lamp_review_zh}
</review>

"""

# ## 一次完成多项任务

prompt = f"""
你能够从<review>中得到一份产品评论，你的任务是从评论中识别以下项目：
- 情绪（正向或负向）
- 评论者是否表达了愤怒（是或否）
- 评论者购买的产品
- 制造该产品的公司

要求：
    输出为JSON对象，JSON中包含“sentiment”、“isAnger”、“product”和“company”字段。如果某项信息无法提取，则返回“null”。

产品评论：
<review>
{lamp_review_zh}
</review>

"""

# 推断主题

story_zh = """
在政府最近进行的一项调查中，要求公共部门的员工对他们所在部门的满意度进行评分。
调查结果显示，NASA 是最受欢迎的部门，满意度为 95％。

一位 NASA 员工 John Smith 对这一发现发表了评论，他表示：
“我对 NASA 排名第一并不感到惊讶。这是一个与了不起的人们和令人难以置信的机会共事的好地方。我为成为这样一个创新组织的一员感到自豪。”

NASA 的管理团队也对这一结果表示欢迎，主管 Tom Johnson 表示：
“我们很高兴听到我们的员工对 NASA 的工作感到满意。
我们拥有一支才华横溢、忠诚敬业的团队，他们为实现我们的目标不懈努力，看到他们的辛勤工作得到回报是太棒了。”

调查还显示，社会保障管理局的满意度最低，只有 45％的员工表示他们对工作满意。
政府承诺解决调查中员工提出的问题，并努力提高所有部门的工作满意度。
"""

# ## 推断5个主题

prompt = f"""
你能够从<text>中得到一份文章，你的任务是推断该文章中讨论的5个主题。

要求：
    每个主题用1或2个词描述。
    输出时主题之间用逗号分割。

文章：
<text>
{story_zh}
</text>
"""

# ## 为特定主题制作新闻提醒

prompt = f"""
你能够从<text>中得到一份文章，你的任务是推断主题列表中的每一项是否属于该文章中讨论的主题。

主题列表：
- 美国航空航天局
- 地方政府
- 工程
- 员工满意度
- 联邦政府

要求：
    以列表的形式回答，表项包含主题名和0或1。0表示该主题不属于文章中讨论的主题，1表示该主题属于文章中讨论的主题。

文章：
<text>
{story_zh}
</text>
"""

prompt = f"""
你能够从<text>中得到一份文章，你的任务是推断主题列表中的每一项是否属于该文章中讨论的主题。

主题列表：
- 美国航空航天局
- 地方政府
- 工程
- 员工满意度
- 联邦政府

要求：
    输出为JSON对象，主题列表的主题对应JSON对象的键， 每个键对应的值为布尔型，值为真表示该主题属于文章中讨论的主题，值为假表示该主题不属于文章中讨论的主题。

文章：
<text>
{story_zh}
</text>
"""

response = get_completion("deepseek-chat", prompt)
ret = json.loads(response.replace("```json", "").replace("```", ""))

if ret["美国航空航天局"] == True:
    print("NOTICE: NASA is discussed in the article")
else:
    print("NOTICE: NASA is NOT discussed in the article")